interface Node {
   id: ID!
}

type Faction implements Node {
    id: ID!
    name: String
    ships: ShipConnection
}

type Ship implements Node {
  id: ID!
   name: String
}

type ShipConnection {
   edges: [ShipEdge]
   pageInfo: PageInfo!
}

type ShipEdge {
   cursor: String!
   node: Ship
 }

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
   startCursor: String
  endCursor: String
}

type Query {
  rebels: Faction
  empire: Faction
  node(id: ID!): Node
}

input IntroduceShipInput {
  clientMutationID: String!
  shipName: String!
   factionId: ID!
 }

input IntroduceShipPayload {
   clientMutationID: String!
   ship: Ship
   faction: Faction
}

type Mutation {
   introduceShip(input IntroduceShipInput!): IntroduceShipPayload
 }